#!/bin/bash
# harbor-client-setup.sh
# Configure Docker client to trust and log in to Harbor registry

set -euo pipefail

# È°èËâ≤ÂÆöÁæ©
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# ÂáΩÊï∏ÔºöÂæûinventory.iniËÆÄÂèñHarbor‰º∫ÊúçÂô®IP
get_harbor_server_ip() {
    local inventory_file="inventory.ini"
    
    # Ê™¢Êü•inventory.iniÊòØÂê¶Â≠òÂú®
    if [[ ! -f "$inventory_file" ]]; then
        # ÂòóË©¶Âú®‰∏äÂ±§ÁõÆÈåÑÂ∞ãÊâæ
        if [[ -f "../$inventory_file" ]]; then
            inventory_file="../$inventory_file"
        elif [[ -f "../../$inventory_file" ]]; then
            inventory_file="../../$inventory_file"
        else
            echo -e "${RED}‚úó Êâæ‰∏çÂà∞inventory.iniÊñá‰ª∂${NC}"
            echo -e "${YELLOW}Ë´ãÁ¢∫‰øùinventory.iniÊñá‰ª∂Â≠òÂú®ÊñºÁï∂ÂâçÁõÆÈåÑÊàñ‰∏äÂ±§ÁõÆÈåÑ${NC}"
            exit 1
        fi
    fi
    
    # Âæû[harbor]ÂçÄÊÆµËÆÄÂèñIP
    local harbor_ip=$(awk '/^\[harbor\]/{flag=1; next} /^\[/{flag=0} flag && /^[0-9]/{print $1; exit}' "$inventory_file")
    
    if [[ -z "$harbor_ip" ]]; then
        echo -e "${RED}‚úó ÁÑ°Ê≥ïÂæûinventory.ini‰∏≠ÊâæÂà∞Harbor‰º∫ÊúçÂô®IP${NC}"
        echo -e "${YELLOW}Ë´ãÊ™¢Êü•inventory.ini‰∏≠ÁöÑ[harbor]ÂçÄÊÆµ${NC}"
        exit 1
    fi
    
    echo "$harbor_ip"
}

# ÂãïÊÖãËÆÄÂèñÈÖçÁΩÆ
echo -e "${BLUE}Ê≠£Âú®Âæûinventory.iniËÆÄÂèñHarborÈÖçÁΩÆ...${NC}"
HARBOR_IP=$(get_harbor_server_ip)
HARBOR_HOST="tungbro.harbor.com"
CERT_REMOTE_PATH="/data/cert/harbor.crt"
CERT_LOCAL="./harbor.crt"
CERT_DEST="/etc/docker/certs.d/$HARBOR_HOST/ca.crt"

echo -e "${BLUE}HarborÈÖçÁΩÆ‰ø°ÊÅØ:${NC}"
echo -e "${YELLOW}Harbor‰º∫ÊúçÂô®IP: ${HARBOR_IP}${NC}"
echo -e "${YELLOW}HarborÂüüÂêç: ${HARBOR_HOST}${NC}"

echo -e "\n${BLUE}Step 0: Remove conflicting packages and install prerequisites...${NC}"
sudo apt remove -y docker.io containerd || true
sudo apt install -y ca-certificates curl gnupg lsb-release openssh-client

echo -e "\n${BLUE}Step 1: Set up Docker official repository...${NC}"
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
  | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
  | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io

echo -e "\n${BLUE}Step 2: Enable and start Docker...${NC}"
sudo systemctl enable docker
sudo systemctl start docker

echo -e "\n${BLUE}Step 3: Ensure Harbor domain resolves...${NC}"
if ! grep -q "$HARBOR_HOST" /etc/hosts; then
  echo "$HARBOR_IP $HARBOR_HOST" | sudo tee -a /etc/hosts > /dev/null
  echo -e "${GREEN}Added $HARBOR_HOST to /etc/hosts${NC}"
else
  echo -e "${YELLOW}$HARBOR_HOST already in /etc/hosts${NC}"
fi

echo -e "\n${BLUE}Step 4: Set up Docker cert directory...${NC}"
sudo mkdir -p "/etc/docker/certs.d/$HARBOR_HOST"

echo -e "\n${BLUE}Step 5: Copy Harbor certificate...${NC}"
if ! scp "root@${HARBOR_IP}:$CERT_REMOTE_PATH" "$CERT_LOCAL"; then
  echo -e "${RED}Failed to SCP $CERT_REMOTE_PATH from Harbor server.${NC}"
  echo -e "${YELLOW}üõ†Ô∏è  Try: sudo chmod 644 $CERT_REMOTE_PATH on Harbor VM${NC}"
  exit 1
fi

sudo cp "$CERT_LOCAL" "$CERT_DEST"
sudo chown root:root "$CERT_DEST"
sudo chmod 644 "$CERT_DEST"
echo -e "${GREEN}Certificate installed at $CERT_DEST${NC}"

echo -e "\n${BLUE}Step 6: Restart Docker...${NC}"
sudo systemctl restart docker

echo -e "\n${BLUE}Step 7: Docker login to Harbor Registry...${NC}"
docker login "$HARBOR_HOST"

echo -e "\n${GREEN}Done! Docker is now configured to trust and access $HARBOR_HOST${NC}"
echo -e "${BLUE}Harbor‰º∫ÊúçÂô®IP: ${HARBOR_IP}${NC}"
echo -e "${BLUE}Ê≠§ÈÖçÁΩÆÂæûinventory.iniËá™ÂãïËÆÄÂèñ${NC}"