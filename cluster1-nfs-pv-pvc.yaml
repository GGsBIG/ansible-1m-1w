# Cluster 1 NFS Persistent Volume and Persistent Volume Claim
# 第一座K8s集群專用的NFS PV/PVC配置
# NFS Server: 10.6.4.220
# NFS Path: /srv/nfs/cluster1-data

---
# Persistent Volume for Cluster 1
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cluster1-nfs-pv
  labels:
    cluster: cluster1
    storage-type: nfs
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: cluster1-nfs
  nfs:
    server: 10.6.4.220
    path: /srv/nfs/cluster1-data
  mountOptions:
    - nfsvers=4.1
    - hard
    - intr

---
# Persistent Volume Claim for Cluster 1
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cluster1-nfs-pvc
  namespace: default
  labels:
    cluster: cluster1
    storage-type: nfs
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: cluster1-nfs
  selector:
    matchLabels:
      cluster: cluster1
      storage-type: nfs

---
# Storage Class for Cluster 1 NFS (Optional)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: cluster1-nfs
  labels:
    cluster: cluster1
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain

---
# Test Pod using the NFS PVC
apiVersion: v1
kind: Pod
metadata:
  name: cluster1-nfs-test-pod
  namespace: default
  labels:
    app: nfs-test
    cluster: cluster1
spec:
  containers:
  - name: test-container
    image: busybox:latest
    command:
      - sleep
      - "3600"
    volumeMounts:
    - name: nfs-storage
      mountPath: /mnt/nfs
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
  volumes:
  - name: nfs-storage
    persistentVolumeClaim:
      claimName: cluster1-nfs-pvc
  restartPolicy: Never

---
# Example Deployment using NFS storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster1-nfs-app
  namespace: default
  labels:
    app: nfs-app
    cluster: cluster1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nfs-app
      cluster: cluster1
  template:
    metadata:
      labels:
        app: nfs-app
        cluster: cluster1
    spec:
      containers:
      - name: app-container
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nfs-storage
          mountPath: /usr/share/nginx/html/shared
        - name: config-volume
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nfs-storage
        persistentVolumeClaim:
          claimName: cluster1-nfs-pvc
      - name: config-volume
        configMap:
          name: nginx-config
          optional: true

---
# ConfigMap for nginx configuration (optional)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
  labels:
    app: nfs-app
    cluster: cluster1
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
        
        location /shared {
            root /usr/share/nginx/html;
            autoindex on;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    } 