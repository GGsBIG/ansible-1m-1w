---
- name: Install and Configure Keepalived for VIP
  hosts: masters
  become: yes
  tasks:
    - name: Install keepalived
      apt:
        name: keepalived
        state: present
        update_cache: yes

    - name: Check network interface name
      shell: ip route | grep default | awk '{print $5}' | head -1
      register: network_interface
      changed_when: false

    - name: Display detected network interface
      debug:
        msg: "Detected network interface: {{ network_interface.stdout }}"

    - name: Configure keepalived for master-1 (MASTER)
      copy:
        dest: /etc/keepalived/keepalived.conf
        content: |
          global_defs {
              router_id LVS_DEVEL
          }

          vrrp_script chk_apiserver {
              script "/etc/keepalived/check_apiserver.sh"
              interval 3
              weight -2
              fall 10
              rise 2
          }

          vrrp_instance VI_1 {
              state MASTER
              interface {{ network_interface.stdout }}
              virtual_router_id 51
              priority 110
              advert_int 1
              authentication {
                  auth_type PASS
                  auth_pass k8s-vip
              }
              virtual_ipaddress {
                  10.10.7.17
              }
              track_script {
                  chk_apiserver
              }
          }
        mode: '0644'
      when: inventory_hostname == groups['masters'][0]

    - name: Configure keepalived for master-2 (BACKUP)
      copy:
        dest: /etc/keepalived/keepalived.conf
        content: |
          global_defs {
              router_id LVS_DEVEL
          }

          vrrp_script chk_apiserver {
              script "/etc/keepalived/check_apiserver.sh"
              interval 3
              weight -2
              fall 10
              rise 2
          }

          vrrp_instance VI_1 {
              state BACKUP
              interface {{ network_interface.stdout }}
              virtual_router_id 51
              priority 100
              advert_int 1
              authentication {
                  auth_type PASS
                  auth_pass k8s-vip
              }
              virtual_ipaddress {
                  10.10.7.17
              }
              track_script {
                  chk_apiserver
              }
          }
        mode: '0644'
      when: inventory_hostname == groups['masters'][1]

    - name: Configure keepalived for master-3 (BACKUP)
      copy:
        dest: /etc/keepalived/keepalived.conf
        content: |
          global_defs {
              router_id LVS_DEVEL
          }

          vrrp_script chk_apiserver {
              script "/etc/keepalived/check_apiserver.sh"
              interval 3
              weight -2
              fall 10
              rise 2
          }

          vrrp_instance VI_1 {
              state BACKUP
              interface {{ network_interface.stdout }}
              virtual_router_id 51
              priority 90
              advert_int 1
              authentication {
                  auth_type PASS
                  auth_pass k8s-vip
              }
              virtual_ipaddress {
                  10.10.7.17
              }
              track_script {
                  chk_apiserver
              }
          }
        mode: '0644'
      when: inventory_hostname == groups['masters'][2]

    - name: Create health check script
      copy:
        dest: /etc/keepalived/check_apiserver.sh
        content: |
          #!/bin/sh
          
          errorExit() {
              echo "*** $*" 1>&2
              exit 1
          }
          
          curl --silent --max-time 2 --insecure https://localhost:6443/ -o /dev/null || errorExit "Error GET https://localhost:6443/"
          if ip addr | grep -q 10.10.7.17; then
              curl --silent --max-time 2 --insecure https://10.10.7.17:6443/ -o /dev/null || errorExit "Error GET https://10.10.7.17:6443/"
          fi
        mode: '0755'

    - name: Start and enable keepalived
      systemd:
        name: keepalived
        state: started
        enabled: yes

    - name: Check VIP status
      shell: ip addr show | grep 10.10.7.17 || echo "VIP not assigned to this node"
      register: vip_status
      changed_when: false

    - name: Display VIP status
      debug:
        msg: "VIP Status on {{ inventory_hostname }}: {{ vip_status.stdout }}"