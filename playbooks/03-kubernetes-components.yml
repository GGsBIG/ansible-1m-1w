---
- name: Install Kubernetes Components
  hosts: all
  become: yes
  tasks:
    - name: Create /etc/apt/keyrings directory if not exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Remove old Kubernetes APT list (if exists)
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Install required packages
      apt:
        name:
          - curl
          - ca-certificates
          - gpg
        state: present

    - name: Download Kubernetes GPG key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'

    - name: Convert Kubernetes GPG key to binary format
      shell: |
        gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kubernetes-apt-keyring.asc
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      lineinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        line: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /'
        create: yes

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Check available kubeadm versions
      shell: apt-cache madison kubeadm
      register: kubeadm_versions
      changed_when: false

    - name: Display available kubeadm versions
      debug:
        msg: "Available kubeadm versions: {{ kubeadm_versions.stdout_lines }}"

    - name: Install kubelet, kubeadm, kubectl
      apt:
        name:
          - kubelet=1.31.0-1.1
          - kubeadm=1.31.0-1.1
          - kubectl=1.31.0-1.1
        state: present

    - name: Hold kubelet, kubeadm, kubectl packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Check kubeadm version
      command: kubeadm version
      register: kubeadm_version_check
      changed_when: false

    - name: Display kubeadm version
      debug:
        msg: "{{ kubeadm_version_check.stdout }}"

    - name: Check kubelet version
      command: kubelet --version
      register: kubelet_version_check
      changed_when: false

    - name: Display kubelet version
      debug:
        msg: "{{ kubelet_version_check.stdout }}"

    - name: Check kubectl version
      command: kubectl version --client
      register: kubectl_version_check
      changed_when: false

    - name: Display kubectl version
      debug:
        msg: "{{ kubectl_version_check.stdout }}"